{
	"name": "Existing Dockerfile",
	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",
	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../Dockerfile",
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.shell.linux": null
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-python.vscode-pylance",
		"eamodio.gitlens",
		"ms-azuretools.vscode-docker",
		"donjayamanne.githistory",
		"oderwat.indent-rainbow",
		"njpwerner.autodocstring",
		"Gruntfuggly.todo-tree",
		"2gua.rainbow-brackets"
	],
	// Uncomment the next line to run commands after the container is created - for example installing curl.
	"postCreateCommand": "apt update && apt install -y git",
	// "postStartCommand": "cp -r .ssh ~/.ssh"
	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}