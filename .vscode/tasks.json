{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "tasks": [
    {
      "label": "k8s update configmap",
      "type": "shell",
      "command": "kubectl create configmap acgn-bot.list.yaml --from-file=config/list.yaml --dry-run=client -o yaml | kubectl apply -f -"
    },
    {
      "label": "pylint: whole project",
      "command": "pylint $(git ls-files '*.py')",
      "type": "shell",
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "focus": true
      },
      "problemMatcher": {
        "fileLocation": [
          "relative",
          "${workspaceRoot}"
        ],
        "pattern": {
          "regexp": "(.+):(\\d+): (.+)",
          "file": 1,
          "line": 2,
          "code": 3,
          "message": 3
        }
      }
    },
    {
      "label": "Run unit tests",
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "command": "python",
      "type": "shell",
      "args": [
        "-m",
        "unittest"
      ],
      "options": {
        "env": {
          "PYTEST_ADDOPTS": "-vv --tb=native -k unit_tests"
        }
      },
      "problemMatcher": [
        {
          "fileLocation": "absolute",
          "pattern": [
            {
              "regexp": "^\\s+File \"(.*)\", line (\\d+), in (.*)$",
              "file": 1,
              "line": 2
            },
            {
              "regexp": "^\\s+(.*)$",
              "message": 1
            }
          ]
        }
      ],
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "focus": true
      }
    },
    {
      "label": "Run Python",
      "type": "shell",
      "command": "python",
      "args": [
        "${file}"
      ],
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": false
      },
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "focus": true
      }
    },
    {
      "label": "Clear Python cache",
      "type": "shell",
      "command": "find . -name \"__pycache__\" -type d -exec rm -rf {} +",
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": false
      },
    },
    {
      "label": "Clear local log files",
      "type": "shell",
      "command": "rm -f logs/app.log*",
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": false
      },
    }
  ]
}